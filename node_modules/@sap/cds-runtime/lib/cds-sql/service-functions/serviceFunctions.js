const { SELECT, INSERT, UPDATE, DELETE } = global.cds.ql

const _promisify = (service, cqn) => {
  cqn.then = (resolve, reject) => {
    return service
      .run(cqn)
      .then(resolve)
      .catch(reject)
  }
  cqn.catch = reject => {
    return service.run(cqn).catch(reject)
  }

  return cqn
}

const _create = (service, entity, data) => {
  return _promisify(service, INSERT.into(entity, data))
}

const create = function (entity) {
  return _promisify(this, INSERT.into(entity))
}

const read = function (entity, ...etc) {
  // add model to etc
  if (etc.length === 0) etc.push(undefined)
  etc.push(this.model)

  return _promisify(this, SELECT.from(entity, ...etc))
}

const update = function (entity, ...etc) {
  return _promisify(this, UPDATE(entity, ...etc))
}

const deleteMethod = function (entity, ...etc) {
  return _promisify(this, DELETE.from(entity, ...etc))
}

const insert = function (data) {
  let _entity

  const insert = {
    into: entity => {
      _entity = entity

      return insert
    },
    then: (resolve, reject) => {
      return _create(this, _entity, data)
        .then(resolve, reject)
        .catch(reject)
    },
    catch: reject => {
      return _create(this, _entity, data).catch(reject)
    }
  }

  return insert
}

module.exports = {
  create,
  read,
  update,
  insert,
  delete: deleteMethod
}
