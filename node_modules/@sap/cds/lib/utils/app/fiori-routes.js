const cds = require('../../cds')

// Only for local cds runs w/o approuter:
// If there is a relative URL in UI5's manifest.json for the datasource,
// like 'browse/' or 'prefix/browse/', we get called with a prefix to the
// service path, like '/browse/webapp/browse/'.
// Serve these requests by redirecting to the actual service URL.
cds.on ('bootstrap', app => {
  const { env, utils:{find, readFileSync}} = cds
  const serviceForUri = {}

  dataSourceURIs().forEach(uri => {
    app.use('*/'+uri, (req, res, next)=> {  //  */browse/webapp[/prefix]/browse/
      // is there a service for '[prefix]/browse' ?
      const srv = serviceForUri[uri] || (serviceForUri[uri] =
        cds.service.providers.find (srv => ('/'+uri).lastIndexOf(srv.path) >=0))
      if (srv) {
        //  /browse/webapp[/prefix]/browse/ -> /browse
        const redirectUrl = req.originalUrl.substring(req.originalUrl.lastIndexOf(srv.path))
        if (req.originalUrl !== redirectUrl)  {// safeguard to prevent running in loops
          // console.log ('>>', req.originalUrl, '->', redirectUrl)
          return res.redirect (308, redirectUrl)
        }
      }
      next()
    })
  })

  function dataSourceURIs() {
    const dataSourceURIs = new Set()
    find (env.folders.app, ['*/manifest.json', '*/*/manifest.json']).forEach(file => {
      const {dataSources: ds} = JSON.parse(readFileSync(file))['sap.app'] || {}
      Object.keys(ds || []).forEach(k => {
        if (ds[k].uri && !ds[k].uri.startsWith('/')) // only consider relative URLs
        dataSourceURIs.add(ds[k].uri)
      })
    })
    return dataSourceURIs
  }

})

