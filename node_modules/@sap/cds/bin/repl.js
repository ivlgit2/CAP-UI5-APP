module.exports = Object.assign (repl, { options: [], help: `
# SYNOPSIS

    *cds r | repl*

    Launches into a read-eval-print-loop, an interactive playground to
    experiment with cds's JavaScript APIs. See documentation of Node.js'
    REPL for details at _http://nodejs.org/api/repl.html_


`})

const cds = require('../lib/cds')
const path = require('path')
const fs = require('fs')
const {inspect} = require('util')

function repl (_, options={}) {

  const colors = options.colors !== false
  const log = options.log || console.log
  const info = colors ? require('./utils/term').info : s => s
  inspect.defaultOptions.depth = 11

  log(info('Welcome to cds repl'))

  const stdout = options.output || process.stdout
  const repl = require('repl') .start ({...options, writer:print })

  Object.assign (repl.context,{
    cds, Foo:{name:'Foo'}
  })

  function print (o) {
    if (!o || typeof o !== 'object') return o

    if (typeof o.then === 'function' && !is_query(o)) o.then (r => {
      if (r) log ('\b\bâ‡¢ '+print(r)); stdout.write('\n> ')
      repl.context.__ = r
    })

    return inspect(o).replace(/\[Object: null prototype\] /g, '')
  }


  const history = path.join(process.env.HOME || process.env.USERPROFILE, '.cds_repl_history')
  const historySize = 111
  fs.readFile(history, 'utf-8', (e, txt) => e || (repl.history = txt.split('\n')))
  repl.on('exit', () => {
    if (repl.history)  fs.writeFile(history, repl.history.slice(-historySize).join('\n'), () => {})
    log(info('bye'))
  })

}

process.on('uncaughtException', console.error)
process.on('unhandledRejection', console.error)

const is_query = x => x && x.SELECT || x.INSERT || x.UPDATE || x.DELETE
/* eslint no-console:0 */
